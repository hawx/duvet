#!/usr/bin/env ruby
#
# A command line tool for coverage testing, I'm not sure if this
# will even work but it is worth a try!
#
# Example:
#   duvet test/test_class.rb
#
$LOAD_PATH.unshift(File.join(File.dirname(__FILE__), '..', 'lib'))

require 'clive'
require 'duvet'

opts = {:dir => 'cov', :style => 'rcov'}

class CLI
  include Clive::Parser
  option_hash :opts
  
  desc 'Use custom css file'
  flag :c, :css, :arg => 'path' do |i|
    opts[:css] = i
  end
  
  desc 'Choose style'
  flag :s, :style, :args => %w(rcov dark light) do |i|
    opts[:style] = i
  end
  
  desc 'Directory to write coverage results to'
  flag :d, :dir, :arg => 'path' do |i|
    opts[:dir] = i
  end
  
  desc 'Use a filter to see only needed results'
  flag :f, :filter, :arg => "string" do |i|
    opts[:filter] = i
  end
end



# Start coverage, then require paths
def run(paths, opts)
  Duvet.start(opts)
  paths.each do |p|
    require p
  end
end

args = CLI.parse(ARGV)
run(args, opts.merge(CLI.opts))
